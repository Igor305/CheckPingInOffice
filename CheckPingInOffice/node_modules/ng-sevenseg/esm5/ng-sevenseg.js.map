{
  "version": 3,
  "file": "ng-sevenseg.js",
  "sources": [
    "ng://ng-sevenseg/out/src/lib/seven-seg/seven-seg.module.ts",
    "ng://ng-sevenseg/out/src/lib/seven-seg/seven-seg-digit.component.ts",
    "ng://ng-sevenseg/out/src/lib/seven-seg/seven-seg.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SevenSegComponent } from './seven-seg.component';\nimport { SevenSegDigitComponent } from './seven-seg-digit.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SevenSegComponent, SevenSegDigitComponent ],\n  exports: [ SevenSegComponent ]\n})\nexport class SevenSegModule { }\n",
    "import { Component, Input, Inject, HostBinding, AfterViewInit, QueryList, Renderer2, ElementRef, ContentChildren, ViewChild, ViewChildren } from '@angular/core';\nimport { SevenSegComponent } from './seven-seg.component';\n\nconst segmentsForDigit = [0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F];\n\n@Component({\n  selector: '[sevenSegDigit]',\n  template: `<svg:use *ngFor=\"let j of allSegments\" [attr.href]=\"'#seg'+j\" #seg />\n<svg:use href=\"#dot\" #dot />\n`,\n  styles: [`[segmentOn]{opacity:1}[segmentOff]{opacity:.2}`]\n})\nexport class SevenSegDigitComponent implements AfterViewInit {\n  @ViewChildren('seg', { read: ElementRef }) segments : QueryList<ElementRef>;\n  @ViewChild('dot') point : any;\n\n  class : string;\n\n  private _digitValue : number;\n  private _showDecimal : boolean = false;\n\n  allSegments : Array<number>;\n\n  get digit():number { return this._digitValue; }\n  set digit(val : number) { this._digitValue = val; this.render(); }\n\n  set showDecimal(show : boolean) { this._showDecimal = show; }\n  get showDecimal() : boolean { return this._showDecimal; }\n\n  @Input() idx : number;\n\n  constructor(private renderer: Renderer2)\n  {\n    this.allSegments = [];\n    for (let i = 0; i<7;i++) { this.allSegments.push(i); }\n  }\n\n  ngAfterViewInit() {\n    this.render();\n  }\n\n  render() {\n    let segs = segmentsForDigit[this._digitValue];\n    this.segments.forEach((item, idx) => {\n      let elt = item.nativeElement;\n      if ((segs >> idx) & 1) {\n        this.renderer.setAttribute(elt, 'segmentOn', '');\n        this.renderer.removeAttribute(elt, 'segmentOff');\n      } else {\n        this.renderer.setAttribute(elt, 'segmentOff', '');\n        this.renderer.removeAttribute(elt, 'segmentOn');\n      }\n      // force redraw in webkit\n      elt.style.display='none';\n      elt.style.display='';\n    });\n\n    let ptElt = this.point.nativeElement;\n\n    if (this._showDecimal) {\n      this.renderer.setAttribute(ptElt, 'segmentOn', '');\n      this.renderer.removeAttribute(ptElt, 'segmentOff');\n    } else {\n      this.renderer.setAttribute(ptElt, 'segmentOff', '');\n      this.renderer.removeAttribute(ptElt, 'segmentOn');\n    }\n    ptElt.style.display='none';\n    ptElt.style.display='';\n  }\n}\n",
    "import { Component, Directive, Input, OnInit, Injectable, AfterViewInit, ElementRef, ViewChildren, Renderer2, QueryList } from '@angular/core';\nimport { SevenSegDigitComponent } from './seven-seg-digit.component';\n\n@Injectable()\n@Component({\n  selector: 'seven-seg',\n  template: `<svg style=\"display: none;\">\n  <defs>\n    <polyline id=\"h-seg\" points=\"11 0, 37 0, 42 5, 37 10, 11 10, 6 5\" />\n    <polyline id=\"v-seg\" points=\"0 11, 5 6, 10 11, 10 34, 5 39, 0 39\" />\n    <circle id=\"dot\" cx=\"52\" cy=\"75\" r=\"5\" />\n    <use id=\"seg0\" href=\"#h-seg\" transform=\"translate(0 0)\"/>\n    <use id=\"seg1\" href=\"#v-seg\" transform=\"translate(48) scale(-1 1)\" />\n    <use id=\"seg2\" href=\"#v-seg\" transform=\"translate(48 80) scale(-1 -1)\" />\n    <use id=\"seg3\" href=\"#h-seg\" transform=\"translate(0 70)\"/>\n    <use id=\"seg4\" href=\"#v-seg\" transform=\"translate(0 80) scale(1 -1)\" />\n    <use id=\"seg5\" href=\"#v-seg\" transform=\"translate(0 0)\" />\n    <use id=\"seg6\" href=\"#h-seg\" transform=\"translate(0 35)\"/>\n  </defs>\n</svg>\n\n<svg [attr.viewBox]=\"viewBox\" focusable=\"false\" display>\n  <g [attr.transform]=\"groupTransform(i)\" *ngFor=\"let i of allDigits\" idx=\"{{i}}\" #digit sevenSegDigit></g>\n</svg>\n`,\n  styles: [`svg{height:3em;overflow:hidden;stroke-width:0;background-color:#000;fill:red}`]\n})\nexport class SevenSegComponent implements AfterViewInit {\n  // @Input('value')\n  _value : number;\n  @Input() digits : number;\n  @Input() decimalPlaces : number; // null = floating?\n\n  @Input() class : string = '';\n\n  @ViewChildren('digit') digitComponents : QueryList<SevenSegDigitComponent>;\n  allDigits : Array<number>;\n  private _viewInit : boolean = false;\n\n  constructor() {\n    // Set reasonable defaults\n    this._value = null;\n    this.digits = 1;\n    this.decimalPlaces = 0;\n  }\n\n  ngOnInit() {\n    this.allDigits = [];\n    for (let i = 0; i<this.digits;i++) { this.allDigits.push(i); }\n  }\n\n  ngAfterViewInit() {\n    this._viewInit = true;\n    this.renderAll();\n  }\n\n  get viewBox() : string {\n    let w = this.digits * 57;\n    return `0 0 ${w} 80`;\n  }\n\n  groupTransform(i : number) : string {\n    let w = i * 57;\n    return `translate(${w} 0)`;\n  }\n\n  @Input()\n  set value(value : number) {\n    let decimalFactor = Math.pow(10, this.decimalPlaces);\n    this._value = Math.round(value * decimalFactor) / decimalFactor;\n    // console.log(`set value: ${this._value}`);\n    this.renderAll();\n  }\n\n  renderAll() {\n    if (!this._viewInit) return;\n\n    // console.log('render all: ', this._value);\n\n    // Special case: if value attribute is null or not given, blank the display\n    if (this._value == null) {\n      this.digitComponents.forEach( comp => comp.digit = null );\n      return;\n    }\n\n    let value = Math.round(this._value * Math.pow(10,this.decimalPlaces)); // shift out decimals from the value\n    // Round the result to correct floating point bug with value=\"4.6\" and decimalPlaces=\"2\" rendering as 4.5_ (4.6*100===459.999999...)\n\n    let digits = this.digits; // declared to put in scope of forEach\n    // targetIdx is where the decimal place will be shown\n    let targetIdx = this.decimalPlaces > 0 ?\n      this.digits - this.decimalPlaces - 1 :\n      -1;\n\n    let leadingZero = true;\n    this.digitComponents.forEach(function(comp, idx) {\n      comp.showDecimal = (idx === targetIdx);\n      let divisor = Math.pow(10, (digits-idx-1));\n      let curDigit = value / divisor;\n      value = value % divisor;\n\n      // console.log('CurDigit:', curDigit, 'next value:', value, 'idx', idx);\n      if (Math.floor(curDigit) > 0) leadingZero = false;\n\n      if (value == null || (leadingZero && idx < digits-1)) comp.digit = null;\n      else if (idx === digits-1) comp.digit = Math.round(curDigit);\n      else comp.digit = Math.floor(curDigit);\n    });\n  }\n\n}\n"
  ],
  "names": [],
  "mappings": "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"
}
