{
  "version": 3,
  "file": "ng-sevenseg.umd.min.js",
  "sources": [
    "ng://ng-sevenseg/out/src/lib/seven-seg/seven-seg.component.ts",
    "ng://ng-sevenseg/out/src/lib/seven-seg/seven-seg-digit.component.ts",
    "ng://ng-sevenseg/out/src/lib/seven-seg/seven-seg.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Directive, Input, OnInit, Injectable, AfterViewInit, ElementRef, ViewChildren, Renderer2, QueryList } from '@angular/core';\nimport { SevenSegDigitComponent } from './seven-seg-digit.component';\n\n@Injectable()\n@Component({\n  selector: 'seven-seg',\n  template: `<svg style=\"display: none;\">\n  <defs>\n    <polyline id=\"h-seg\" points=\"11 0, 37 0, 42 5, 37 10, 11 10, 6 5\" />\n    <polyline id=\"v-seg\" points=\"0 11, 5 6, 10 11, 10 34, 5 39, 0 39\" />\n    <circle id=\"dot\" cx=\"52\" cy=\"75\" r=\"5\" />\n    <use id=\"seg0\" href=\"#h-seg\" transform=\"translate(0 0)\"/>\n    <use id=\"seg1\" href=\"#v-seg\" transform=\"translate(48) scale(-1 1)\" />\n    <use id=\"seg2\" href=\"#v-seg\" transform=\"translate(48 80) scale(-1 -1)\" />\n    <use id=\"seg3\" href=\"#h-seg\" transform=\"translate(0 70)\"/>\n    <use id=\"seg4\" href=\"#v-seg\" transform=\"translate(0 80) scale(1 -1)\" />\n    <use id=\"seg5\" href=\"#v-seg\" transform=\"translate(0 0)\" />\n    <use id=\"seg6\" href=\"#h-seg\" transform=\"translate(0 35)\"/>\n  </defs>\n</svg>\n\n<svg [attr.viewBox]=\"viewBox\" focusable=\"false\" display>\n  <g [attr.transform]=\"groupTransform(i)\" *ngFor=\"let i of allDigits\" idx=\"{{i}}\" #digit sevenSegDigit></g>\n</svg>\n`,\n  styles: [`svg{height:3em;overflow:hidden;stroke-width:0;background-color:#000;fill:red}`]\n})\nexport class SevenSegComponent implements AfterViewInit {\n  // @Input('value')\n  _value : number;\n  @Input() digits : number;\n  @Input() decimalPlaces : number; // null = floating?\n\n  @Input() class : string = '';\n\n  @ViewChildren('digit') digitComponents : QueryList<SevenSegDigitComponent>;\n  allDigits : Array<number>;\n  private _viewInit : boolean = false;\n\n  constructor() {\n    // Set reasonable defaults\n    this._value = null;\n    this.digits = 1;\n    this.decimalPlaces = 0;\n  }\n\n  ngOnInit() {\n    this.allDigits = [];\n    for (let i = 0; i<this.digits;i++) { this.allDigits.push(i); }\n  }\n\n  ngAfterViewInit() {\n    this._viewInit = true;\n    this.renderAll();\n  }\n\n  get viewBox() : string {\n    let w = this.digits * 57;\n    return `0 0 ${w} 80`;\n  }\n\n  groupTransform(i : number) : string {\n    let w = i * 57;\n    return `translate(${w} 0)`;\n  }\n\n  @Input()\n  set value(value : number) {\n    let decimalFactor = Math.pow(10, this.decimalPlaces);\n    this._value = Math.round(value * decimalFactor) / decimalFactor;\n    // console.log(`set value: ${this._value}`);\n    this.renderAll();\n  }\n\n  renderAll() {\n    if (!this._viewInit) return;\n\n    // console.log('render all: ', this._value);\n\n    // Special case: if value attribute is null or not given, blank the display\n    if (this._value == null) {\n      this.digitComponents.forEach( comp => comp.digit = null );\n      return;\n    }\n\n    let value = Math.round(this._value * Math.pow(10,this.decimalPlaces)); // shift out decimals from the value\n    // Round the result to correct floating point bug with value=\"4.6\" and decimalPlaces=\"2\" rendering as 4.5_ (4.6*100===459.999999...)\n\n    let digits = this.digits; // declared to put in scope of forEach\n    // targetIdx is where the decimal place will be shown\n    let targetIdx = this.decimalPlaces > 0 ?\n      this.digits - this.decimalPlaces - 1 :\n      -1;\n\n    let leadingZero = true;\n    this.digitComponents.forEach(function(comp, idx) {\n      comp.showDecimal = (idx === targetIdx);\n      let divisor = Math.pow(10, (digits-idx-1));\n      let curDigit = value / divisor;\n      value = value % divisor;\n\n      // console.log('CurDigit:', curDigit, 'next value:', value, 'idx', idx);\n      if (Math.floor(curDigit) > 0) leadingZero = false;\n\n      if (value == null || (leadingZero && idx < digits-1)) comp.digit = null;\n      else if (idx === digits-1) comp.digit = Math.round(curDigit);\n      else comp.digit = Math.floor(curDigit);\n    });\n  }\n\n}\n",
    "import { Component, Input, Inject, HostBinding, AfterViewInit, QueryList, Renderer2, ElementRef, ContentChildren, ViewChild, ViewChildren } from '@angular/core';\nimport { SevenSegComponent } from './seven-seg.component';\n\nconst segmentsForDigit = [0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F];\n\n@Component({\n  selector: '[sevenSegDigit]',\n  template: `<svg:use *ngFor=\"let j of allSegments\" [attr.href]=\"'#seg'+j\" #seg />\n<svg:use href=\"#dot\" #dot />\n`,\n  styles: [`[segmentOn]{opacity:1}[segmentOff]{opacity:.2}`]\n})\nexport class SevenSegDigitComponent implements AfterViewInit {\n  @ViewChildren('seg', { read: ElementRef }) segments : QueryList<ElementRef>;\n  @ViewChild('dot') point : any;\n\n  class : string;\n\n  private _digitValue : number;\n  private _showDecimal : boolean = false;\n\n  allSegments : Array<number>;\n\n  get digit():number { return this._digitValue; }\n  set digit(val : number) { this._digitValue = val; this.render(); }\n\n  set showDecimal(show : boolean) { this._showDecimal = show; }\n  get showDecimal() : boolean { return this._showDecimal; }\n\n  @Input() idx : number;\n\n  constructor(private renderer: Renderer2)\n  {\n    this.allSegments = [];\n    for (let i = 0; i<7;i++) { this.allSegments.push(i); }\n  }\n\n  ngAfterViewInit() {\n    this.render();\n  }\n\n  render() {\n    let segs = segmentsForDigit[this._digitValue];\n    this.segments.forEach((item, idx) => {\n      let elt = item.nativeElement;\n      if ((segs >> idx) & 1) {\n        this.renderer.setAttribute(elt, 'segmentOn', '');\n        this.renderer.removeAttribute(elt, 'segmentOff');\n      } else {\n        this.renderer.setAttribute(elt, 'segmentOff', '');\n        this.renderer.removeAttribute(elt, 'segmentOn');\n      }\n      // force redraw in webkit\n      elt.style.display='none';\n      elt.style.display='';\n    });\n\n    let ptElt = this.point.nativeElement;\n\n    if (this._showDecimal) {\n      this.renderer.setAttribute(ptElt, 'segmentOn', '');\n      this.renderer.removeAttribute(ptElt, 'segmentOff');\n    } else {\n      this.renderer.setAttribute(ptElt, 'segmentOff', '');\n      this.renderer.removeAttribute(ptElt, 'segmentOn');\n    }\n    ptElt.style.display='none';\n    ptElt.style.display='';\n  }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SevenSegComponent } from './seven-seg.component';\nimport { SevenSegDigitComponent } from './seven-seg-digit.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SevenSegComponent, SevenSegDigitComponent ],\n  exports: [ SevenSegComponent ]\n})\nexport class SevenSegModule { }\n"
  ],
  "names": [
    "SevenSegComponent",
    "this",
    "class",
    "_viewInit",
    "_value",
    "digits",
    "decimalPlaces",
    "prototype",
    "ngOnInit",
    "allDigits",
    "i",
    "push",
    "ngAfterViewInit",
    "renderAll",
    "Object",
    "defineProperty",
    "get",
    "groupTransform",
    "set",
    "value",
    "decimalFactor",
    "Math",
    "pow",
    "round",
    "targetIdx",
    "leadingZero",
    "digitComponents",
    "forEach",
    "comp",
    "idx",
    "showDecimal",
    "divisor",
    "curDigit",
    "floor",
    "digit",
    "type",
    "Injectable",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "Input",
    "ViewChildren",
    "segmentsForDigit",
    "SevenSegDigitComponent",
    "renderer",
    "_showDecimal",
    "allSegments",
    "_digitValue",
    "val",
    "render",
    "show",
    "_this",
    "segs",
    "segments",
    "item",
    "elt",
    "nativeElement",
    "setAttribute",
    "removeAttribute",
    "style",
    "display",
    "ptElt",
    "point",
    "Renderer2",
    "read",
    "ElementRef",
    "ViewChild",
    "SevenSegModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "+TAAA,IAAAA,EAAA,WAuCE,SAAFA,IANAC,KAAAC,SAA4B,GAI5BD,KAAAE,WAAgC,EAI5BF,KAAKG,OAAS,KACdH,KAAKI,OAAS,EACdJ,KAAKK,cAAgB,SAGvBN,EAAFO,UAAAC,SAAE,WACEP,KAAKQ,UAAY,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAET,KAAKI,OAAOK,IAAOT,KAAKQ,UAAUE,KAAKD,IAG3DV,EAAFO,UAAAK,gBAAE,WACEX,KAAKE,WAAY,EACjBF,KAAKY,aAGPC,OAAFC,eAAMf,EAANO,UAAA,UAAA,CAAAS,IAAE,WAEE,MAAO,OADe,GAAdf,KAAKI,OACjB,uCAGEL,EAAFO,UAAAU,eAAE,SAAeP,GAEb,MAAO,aADK,GAAJA,EACZ,OAIAI,OAAAC,eAAMf,EAANO,UAAA,QAAA,CAAAW,IAAA,SAAYC,GACR,IAAIC,EAAgBC,KAAKC,IAAI,GAAIrB,KAAKK,eACtCL,KAAKG,OAASiB,KAAKE,MAAMJ,EAAQC,GAAiBA,EAElDnB,KAAKY,6CAGPb,EAAFO,UAAAM,UAAE,WACE,GAAKZ,KAAKE,UAKV,GAAmB,MAAfF,KAAKG,OAAT,CAKA,IAAIe,EAAQE,KAAKE,MAAMtB,KAAKG,OAASiB,KAAKC,IAAI,GAAGrB,KAAKK,gBAGlDD,EAASJ,KAAKI,OAEdmB,EAAiC,EAArBvB,KAAKK,cACnBL,KAAKI,OAASJ,KAAKK,cAAgB,GAClC,EAECmB,GAAc,EAClBxB,KAAKyB,gBAAgBC,QAAQ,SAASC,EAAMC,GAC1CD,EAAKE,YAAeD,IAAQL,EAC5B,IAAIO,EAAUV,KAAKC,IAAI,GAAKjB,EAAOwB,EAAI,GACnCG,EAAWb,EAAQY,EACvBZ,GAAgBY,EAGW,EAAvBV,KAAKY,MAAMD,KAAeP,GAAc,GAEUG,EAAKM,MAA9C,MAATf,GAAkBM,GAAeI,EAAMxB,EAAO,EAAiB,KAC1DwB,IAAQxB,EAAO,EAAgBgB,KAAKE,MAAMS,GACjCX,KAAKY,MAAMD,UAzB7B/B,KAAKyB,gBAAgBC,QAAS,SAAAC,GAAQ,OAAAA,EAAKM,MAAQ,UAjFzD,iBAGA,CAAAC,KAACC,EAAAA,YACD,CAAAD,KAACE,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,YACVC,SAAU,w5BAmBVC,OAAQ,CAAC,6IAKXpC,OAAA,CAAA,CAAA8B,KAAGO,EAAAA,QACHpC,cAAA,CAAA,CAAA6B,KAAGO,EAAAA,QAEHxC,QAAA,CAAA,CAAAiC,KAAGO,EAAAA,QAEHhB,gBAAA,CAAA,CAAAS,KAAGQ,EAAAA,aAAHL,KAAA,CAAgB,WA+BhBnB,MAAA,CAAA,CAAAgB,KAAGO,EAAAA,SClEH,IAGME,EAAmB,CAAC,GAAM,EAAM,GAAM,GAAM,IAAM,IAAM,IAAM,EAAM,IAAM,KAShFC,EAAA,WAmBE,SAAFA,EAAsBC,GAAA7C,KAAtB6C,SAAsBA,EAZtB7C,KAAA8C,cAAmC,EAc/B9C,KAAK+C,YAAc,GACnB,IAAK,IAAItC,EAAI,EAAGA,EAAE,EAAEA,IAAOT,KAAK+C,YAAYrC,KAAKD,UAXnDI,OAAFC,eAAM8B,EAANtC,UAAA,QAAA,CAAAS,IAAE,WAAqB,OAAOf,KAAKgD,aACnC/B,IAAE,SAAUgC,GAAgBjD,KAAKgD,YAAcC,EAAKjD,KAAKkD,0CAEvDrC,OAAFC,eAAM8B,EAANtC,UAAA,cAAA,CACAS,IAAE,WAA8B,OAAOf,KAAK8C,cAD5C7B,IAAE,SAAgBkC,GAAkBnD,KAAK8C,aAAeK,mCAWtDP,EAAFtC,UAAAK,gBAAE,WACEX,KAAKkD,UAGPN,EAAFtC,UAAA4C,OAAE,WAAA,IAAFE,EAAApD,KACQqD,EAAOV,EAAiB3C,KAAKgD,aACjChD,KAAKsD,SAAS5B,QAAQ,SAAC6B,EAAM3B,GAC3B,IAAI4B,EAAMD,EAAKE,cACVJ,GAAQzB,EAAO,GAClBwB,EAAKP,SAASa,aAAaF,EAAK,YAAa,IAC7CJ,EAAKP,SAASc,gBAAgBH,EAAK,gBAEnCJ,EAAKP,SAASa,aAAaF,EAAK,aAAc,IAC9CJ,EAAKP,SAASc,gBAAgBH,EAAK,cAGrCA,EAAII,MAAMC,QAAQ,OAClBL,EAAII,MAAMC,QAAQ,KAGpB,IAAIC,EAAQ9D,KAAK+D,MAAMN,cAEnBzD,KAAK8C,cACP9C,KAAK6C,SAASa,aAAaI,EAAO,YAAa,IAC/C9D,KAAK6C,SAASc,gBAAgBG,EAAO,gBAErC9D,KAAK6C,SAASa,aAAaI,EAAO,aAAc,IAChD9D,KAAK6C,SAASc,gBAAgBG,EAAO,cAEvCA,EAAMF,MAAMC,QAAQ,OACpBC,EAAMF,MAAMC,QAAQ,MAvDxB,iBAPA,CAAA3B,KAACE,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,kBACVC,SAAU,0GAGVC,OAAQ,CAAC,yFAVX,CAAAN,KAA0E8B,EAAAA,+BAa1EV,SAAA,CAAA,CAAApB,KAAGQ,EAAAA,aAAHL,KAAA,CAAgB,MAAO,CAAE4B,KAAMC,EAAAA,eAC/BH,MAAA,CAAA,CAAA7B,KAAGiC,EAAAA,UAAH9B,KAAA,CAAa,SAebT,IAAA,CAAA,CAAAM,KAAGO,EAAAA,SC7BH,IAAA2B,EAAA,2BAKA,CAAAlC,KAACmC,EAAAA,SAADhC,KAAA,CAAU,CACRiC,QAAS,CACPC,EAAAA,cAEFC,aAAc,CAACzE,EAAmB6C,GAClC6B,QAAS,CAAE1E"
}
